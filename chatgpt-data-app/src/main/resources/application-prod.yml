server:
  port: 8090

  # 1 核 2G 内存，线程数经验值 200；4 核 8G 内存【accept-count=1000、max-threads=800、max-connections=10000】，线程数经验值 800。线程池过大，cpu 调度会消耗大量时间
  tomcat:
    mbeanregistry:
      enabled: true

    max-connections: 100

    threads:
      # 设定处理客户请求的线程的最大数目，决定了服务器可以同时响应客户请求的数，默认 200
      max: 100

      # 初始化线程数，最小空闲线程数，默认是 10
      min-spare: 50

    # 等待队列长度
    accept-count: 10

# 应用配置
app:
  config:
    # 版本，方便通过接口版本升级
    api-version: v1

    # 跨域，开发阶段可以设置为 * 不限制
    cross-origin: '*'

    # 访问频次限制
    limit-count: 10

    # 白名单，不做频次拦截【微信的 openid】o0G6z6h-nHpZFUZVrcPJayOdN884
    white-list: o0G6z6h-nHpZFUZVrcPJayOdN884

# ChatGPT SDK Config
chatgpt:
  sdk:
    config:
      # 状态：true = 开启、false 关闭
      enabled: false

      # 官网地址 https://api.openai.com/
      api-host: https://service-d6wuqy4n-1320869466.cd.apigw.tencentcs.com/

      # 官网申请 https://platform.openai.com/account/api-keys
      api-key: sk-cxFtovolwcSmPElG5867C634010448AfA6Eb2b942d3a2aDc

# ChatGLM SDK Config
chatglm:
  sdk:
    config:
      # 状态；true = 开启、false 关闭
      enabled: true

      # 官网地址
      api-host: https://open.bigmodel.cn/

      # 官网申请 https://open.bigmodel.cn/usercenter/apikeys - 自己可申请
      api-secret-key: 2abbbc41b164c2f21740e82582ed44b5.YQcsJ0j4CMwuLVfL

# 微信公众号配置信息
# originalid：原始 ID
# appid：个人 AppID
# token：开通接口服务自定义设置
wx:
  config:
    originalid: gh_8aed07a01479
    appid: wxa175a0b560bd00a2
    token: MYXH

# 支付配置：如果你申请了支付渠道，则可以配置 enable = true，否则就配置 false 走流程测试
wxpay:
  config:
    # 状态：true = 开启、false 关闭
    enabled: false

    # 申请支付主体的 appid
    appid: wx4bd388e42758df34

    # 商户号
    mchid: 1649876094

    # 回调地址
    # notify-url: http://myxh-chatqpt.site/api/v1/mall/pay_notify
    notify-url: https://api.myxh-chatqpt.site/api/v1/mall/pay_notify

    # 商户 API 私钥路径
    private-key-path: cert/apiclient_key.pem

    # 商户证书序列号：openssl x509 -in apiclient_cert.pem -noout -serial
    merchant-serial-number: 3D1FE714D0FE79E87139D4FF9782AD98A5103D30

    # 商户 APIV3 密钥
    api-v3-key: ERfdoklp309876uhjDDDD00poi91EDDl

# 线程池配置
thread:
  pool:
    executor:
      config:
        core-pool-size: 20
        max-pool-size: 50
        keep-alive-time: 5000
        block-queue-size: 5000
        policy: CallerRunsPolicy

# 数据库配置：SpringBoot 默认连接池为 HikariDataSource
spring:
  datasource:
    username: root
    password: 520.ILY!
    url: jdbc:mysql://mysql:3306/openai?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
    driver-class-name: com.mysql.cj.jdbc.Driver

  hikari:
    pool-name: Retail_HikariCP

    # 最小空闲连接数量
    minimum-idle: 15

    # 空闲连接存活最大时间，默认 600000（10 分钟）
    idle-timeout: 180000

    # 连接池最大连接数，默认是 10
    maximum-pool-size: 25

    # 此属性控制从池返回的连接的默认自动提交行为，默认值：true
    auto-commit: true

    # 此属性控制池中连接的最长生命周期，值 0 表示无限生命周期，默认 1800000 即 30 分钟
    max-lifetime: 1800000

    # 数据库连接超时时间，默认 30 秒，即 30000
    connection-timeout: 30000
    connection-test-query: SELECT 1

  type: com.zaxxer.hikari.HikariDataSource

  redis:
    host: redis
    port: 6379

mybatis:
  mapper-locations: classpath:/mybatis/mapper/*.xml
  config-location: classpath:/mybatis/config/mybatis-config.xml

# Redis
redis:
  sdk:
    config:
      host: redis
      password: 520.ILY!
      port: 6379
      pool-size: 10
      min-idle-size: 5
      idle-timeout: 30000
      connect-timeout: 5000
      retry-attempts: 3
      retry-interval: 1000
      ping-interval: 60000
      keep-alive: true

# 监控
management:
  endpoints:
    web:
      exposure:
        # 暴露所有端点，包括自定义端点
        include: "*"

  endpoint:
    metrics:
      enabled: true

    health:
      # 显示详细的健康检查信息
      show-details: always

  metrics:
    export:
      prometheus:
        # 启用 Prometheus
        enabled: true

  prometheus:
    # 启用 Prometheus 端点
    enabled: true

  jmx:
    # 启用 JMX 监控
    enabled: true

  system:
    cpu:
      # 启用 CPU 监控
      enabled: true

    memory:
      # 启用内存监控
      enabled: true

# 日志
logging:
  level:
    root: info

  config: classpath:logback-spring.xml
