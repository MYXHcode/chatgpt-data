# 命令执行 docker-compose up -d
# docker-compose -f environment-docker-compose.yml up -d
version: '3.9'
services:
  # Nginx
  # yum install -y httpd-tools
  nginx:
    image: nginx:1.25.3
    container_name: nginx
    restart: always

    ports:
      - '443:443'
      - '80:80'

    volumes:
      - ./nginx/logs:/var/log/nginx
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl/

    privileged: true

  # MySQL
  mysql:
    image: mysql:8.0.21
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always

    environment:
      TZ: Asia/Shanghai

      # 可配置无密码，注意配置 SPRING_DATASOURCE_PASSWORD=
      # MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_ROOT_PASSWORD: 520.ILY!
      MYSQL_USER: root
      MYSQL_PASSWORD: 520.ILY!

    networks:
      - my-network

    depends_on:
      - mysql-job-dbdata

    ports:
      - "13306:3306"

    volumes:
      - ./sql:/docker-entrypoint-initdb.d

    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s

    volumes_from:
      - mysql-job-dbdata

  # 自动加载数据
  mysql-job-dbdata:
    image: alpine:3.18.2
    container_name: mysql-job-dbdata

    volumes:
      - /var/lib/mysql

  # phpMyAdmin https://hub.docker.com/_/phpmyadmin
  phpmyadmin:
    image: phpmyadmin:5.2.1
    container_name: phpmyadmin
    hostname: phpmyadmin
    restart: always

    ports:
      - "8899:80"

    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=520.ILY!

    depends_on:
      mysql:
        condition: service_healthy

    networks:
      - my-network

  # Redis
  redis:
    image: redis:7.2.0
    container_name: redis
    restart: always
    hostname: redis
    privileged: true

    ports:
      - "16379:6379"

    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf

    command: redis-server /usr/local/etc/redis/redis.conf

    networks:
      - my-network

    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  # RedisAdmin https://github.com/joeferner/redis-commander
  redis-admin:
    image: spryker/redis-commander:0.8.0
    container_name: redis-admin
    hostname: redis-commander
    restart: always

    ports:
      - "8081:8081"

    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=MYXH
      - HTTP_PASSWORD=520.ILY!

    networks:
      - my-network

    depends_on:
      redis:
        condition: service_healthy

  #  chatgpt-data-app
  chatgpt-data-app:
    image: myxh/chatgpt-data-app:1.3
    container_name: chatgpt-data-app

    ports:
      - "8090:8090"

    environment:
      - TZ=PRC
      - SERVER_PORT=8090
      - APP_CONFIG_API_VERSION=v1
      - APP_CONFIG_CROSS_ORIGIN=*
      - APP_CONFIG_LIMIT_COUNT=10
      - THREAD_POOL_EXECUTOR_CONFIG_CORE_POOL_SIZE=20
      - THREAD_POOL_EXECUTOR_CONFIG_MAX_POOL_SIZE=50
      - THREAD_POOL_EXECUTOR_CONFIG_KEEP_ALIVE_TIME=5000
      - THREAD_POOL_EXECUTOR_CONFIG_BLOCK_QUEUE_SIZE=5000
      - THREAD_POOL_EXECUTOR_CONFIG_POLICY=CallerRunsPolicy
      - APP_CONFIG_WHITE_LIST=o0G6z6h-nHpZFUZVrcPJayOdN884
      - WXPAY_CONFIG_ENABLED=false
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=520.ILY!
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/openai?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=UTC&useSSL=true
      - CHATGPT_SDK_CONFIG_ENABLED=true
      - CHATGPT_SDK_CONFIG_API_HOST=https://api.openai.com/
      - CHATGPT_SDK_CONFIG_API_KEY=sk-e8Dgomrqhd2OZvx1Ef9f1a1e17D348F0A0E11a374cEdB398
      - CHATGLM_SDK_CONFIG_ENABLED=true
      - CHATGLM_SDK_CONFIG_API_HOST=https://open.bigmodel.cn/
      - CHATGLM_SDK_CONFIG_API_KEY=2abbbc41b164c2f21740e82582ed44b5.YQcsJ0j4CMwuLVfL
      - WX_CONFIG_ORIGINALID=gh_8aed07a01479
      - WX_CONFIG_APPID=wxa175a0b560bd00a2
      - WX_CONFIG_TOKEN=MYXH
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379

    volumes:
      - ./log:/var/log/x-api-app

    networks:
      - my-network

    depends_on:
      redis:
        condition: service_healthy

      mysql:
        condition: service_healthy

    logging:
      driver: "json-file"

      options:
        max-size: "10m"
        max-file: "3"

    restart: always

  # chatgpt-web-app
  chatgpt-web-app:
    # container_name: chatgpt-web-local
    container_name: chatgpt-web-cloud

    # image: myxh/chatgpt-web-local:1.3
    image: myxh/chatgpt-web-cloud:1.3

    ports:
      - "3000:3000"

    networks:
      - my-network

    environment:
      # - NEXT_PUBLIC_API_HOST_URL=http://localhost:8090
      - NEXT_PUBLIC_API_HOST_URL=http://43.143.161.125:8090

    restart: always

networks:
  my-network:
    driver: bridge
